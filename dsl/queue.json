{ 
    "name": "concurrent queue",
    "cases": [ "<x>",
               "<x> ||| <x>",
               "<x> ||| <x> ||| <x>",
               "<x> ||| <x> ||| <x> ||| <x>",
               "sleep",
               "<x> ||| sleep",
               "<x> ||| <x> ||| sleep",
               "<x> ||| <x> ||| <x> ||| sleep"
             ],
    "elements": [
        {
            "type": "ConcurrentLinkedQueue",
            "name": "q",
            "decls": ["final ConcurrentLinkedQueue<Object> q = new ConcurrentLinkedQueue<Object>();",
                      "final int qN = 100000;",
                      "final Object dummy = new Object();"
                     ],
            "reset": ["q.clear();",
                      "for (int qi = 0; qi < qN*10; qi++) {",
                      "  q.offer (dummy);",
                      "}"
                     ],
            "operations": [
                { 
                    "opName": "remove",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.remove();"
                },
                { 
                    "opName": "peek",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.peek();"
                },
                { 
                    "opName": "poll",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.poll();"
                },
                { 
                    "opName": "offer",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.offer(dummy);"
                }
            ]
        }, 
        { 
            "type": "ArrayBlockingQueue",
            "name": "q",
            "decls": ["final ArrayBlockingQueue<Object> q = new ArrayBlockingQueue<Object>(1000000);",
                      "final int qN = 100000;",
                      "final Object dummy = new Object();"
                     ],
            "reset": ["q.clear();",
                      "for (int qi = 0; qi < qN*10; qi++) {",
                      "  q.offer (dummy);",
                      "}"
                     ],
            "operations": [
                { 
                    "opName": "remove",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.remove();"
                },
                { 
                    "opName": "peek",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.peek();"
                },
                { 
                    "opName": "poll",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.poll();"
                },
                { 
                    "opName": "offer",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.offer(dummy);"
                }
            ]
        },
        { 
            "type": "LinkedBlockingQueue",
            "name": "q",
            "decls": ["final LinkedBlockingQueue<Object> q = new LinkedBlockingQueue<Object>();",
                      "final int qN = 100000;",
                      "final Object dummy = new Object();"
                     ],
            "reset": ["q.clear();",
                      "for (int qi = 0; qi < qN*10; qi++) {",
                      "  q.offer (dummy);",
                      "}"
                     ],
            "operations": [
                { 
                    "opName": "remove",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.remove();"
                },
                { 
                    "opName": "peek",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.peek();"
                },
                { 
                    "opName": "poll",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.poll();"
                },
                { 
                    "opName": "offer",
                    "opCode": "for (int qi = 0; qi < qN; qi++) q.offer(dummy);"
                }
            ]
        }
    ]
}
